#!/usr/bin/env bash

################################################################################
# This file is intended to be sourced by each bash-compatible shell rc file
# (.bashrc, .zshrc, etc).
################################################################################

source ~/.git-prompt.sh

### PATH
for p in \
  "${HOME}/.local/bin" \
  "${HOME}/.local/go/bin" \
  "${HOME}/go/bin" \
  "${HOME}/.cargo/bin" \
  "/usr/games" \
  "/usr/local/games" \
; do
  if [[ ! "${PATH}" =~ ${p} ]]; then
    export PATH="${p}:${PATH}"
  fi
done

### Shell prompt
# Built with help from: https://bash-prompt-generator.org/
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_STATESEPARATOR=''
PROMPT_COMMAND='PS1_CMD1=$(__git_ps1 " (%s)")'
PS1='\[\e[92m\]\u@\h \[\e[96m\]\w\[\e[93m\]${PS1_CMD1}\[\e[0m\] [\[\e[91m\]$?\[\e[0m\]]\n-> '

### Aliases
alias aws-azure-login="npx aws-azure-login@3.6.4 --no-prompt "
alias cfn='aws cloudformation '
alias dsp='docker system prune'
alias dspv='docker system prune --volumes'
alias k='kubectl '
alias tclsh='rlwrap tclsh '
alias tf='terraform '
alias va='source venv/bin/activate'
alias vc='python3 -m venv --clear venv'
# System update
# Name chosen because this matches one of the oh-my-zsh aliases for all this
alias agud='sudo apt update && sudo apt dist-upgrade && sudo apt autoremove && sudo apt autoclean'
# Git aliases
alias gst='git status'
alias gco='git checkout '
alias gl='git pull'
alias gc='git commit '
alias gp='git push'

### Vars
export AWS_DEFAULT_REGION='us-east-2'
[[ -f "${HOME}/.aws_var_overrides" ]] && source "${HOME}/.aws_var_overrides"

export DOCKER_BUILDKIT=1

export OSC_INFRA_ROOT="${HOME}/repos/opensourcecorp/osc-infra"
# export VAGRANT_EXPERIMENTAL="disks"
export VAGRANT_DEFAULT_PROVIDER=libvirt

# VSCode is so fucking stupid, and needs this undocumented var for actually
# opening a Remote
export WSL_DISTRO_NAME='debian'

### Completions
if [[ "${SHELL}" =~ bash ]]; then
  bind 'set show-all-if-ambiguous on'
  bind 'TAB:menu-complete'
  bind '"\e[Z":menu-complete-backward'
fi
# TODO: make this dynamic based on shell
# if command -v kubectl > /dev/null; then
#   source <(kubectl completion zsh)
# fi

### Functions
git-branch-cleanup() {
  git fetch --prune 2>&1 \
  | awk '{ gsub(/origin\//, "", $5) ; print $5 }' \
  | xargs -I{} git branch -D || true
}

# Quick-and-dirty but handy SQLite func for operating directly on CSVs
csvql() {
  sqlite3 \
    ':memory:' \
    -cmd '.mode csv' \
    -cmd ".import $1 data" \
    -cmd '.mode column' \
    "${2}"
}

github-super-linter() {
  local result=0

  docker run \
    --rm \
    -it \
    -e RUN_LOCAL=true \
    -e USE_FIND_ALGORITHM=true \
    -e IGNORE_GITIGNORED_FILES=true \
    -e FILTER_REGEX_EXCLUDE='.*testdata/.*|.*vendor/.*|.*\.vmdk|.*\.ovf|.*\.box|.*\.iso' \
    -e VALIDATE_NATURAL_LANGUAGE=false \
    -e VALIDATE_GO_MODULES=true \
    -v "${PWD}":/tmp/lint \
    ghcr.io/super-linter/super-linter:slim-v5 \
  || result="$?"

  return "${result}"
}

### THE FOLLOWING NEED TO RUN LAST
# Check if running under WSL, and NOT WSL Debian
if uname -a | grep -q -i -E 'microsoft|wsl' ; then # && ! grep -q 'sid' /etc/*-release ; then
  if [[ -f /usr/lib/binfmt.d/WSLInterop.conf ]]; then
    printf 'WARNING: the file at /usr/lib/binfmt.d/WSLInterop.conf is there until MS fixes systemd-enabled WSL2 interop -- delete later when no longer needed\n'
    printf 'Additional details here: https://github.com/microsoft/WSL/issues/8843#issuecomment-1255546484\n'
  fi
  sudo usermod -aG kvm,libvirt "${USER}" || true
  sudo bash -c '[[ -f /etc/resolv.conf ]] || sudo printf "nameserver 8.8.8.8\nnameserver 1.1.1.1\n" > /etc/resolv.conf'
  export VAGRANT_DEFAULT_PROVIDER='libvirt'
fi

# This needs to run DEAD LAST, since it's an exec call
{ [[ -z "${TMUX:-}" ]] && exec tmux ;} || true
