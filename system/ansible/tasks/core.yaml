---
################################################################################
# System packages
################################################################################

# We do this to make earlier APT updates faster until we need those repos
- name: "Remove custom APT sources files"
  become: true
  ansible.builtin.deb822_repository:
    name: "{{ item.name }}"
    state: "absent"
  loop: "{{ apt_repos }}"

- name: "Update APT cache"
  become: true
  ansible.builtin.apt:
    update_cache: true

- name: "Install zstd so APT stops complaining"
  become: true
  ansible.builtin.apt:
    pkg:
      - "zstd"
    state: "present"

- name: "Install core & development packages"
  become: true
  ansible.builtin.apt:
    pkg:
      - "apt-transport-https"
      - "bash-completion"
      - "bats"
      - "blueman"
      - "bluez"
      - "bridge-utils"
      - "build-essential"
      - "ca-certificates"
      - "cloc"
      - "curl"
      - "git"
      - "gnupg2"
      - "htop"
      - "ipython3"
      - "jq"
      - "libclang-dev"
      - "libssl-dev"
      - "libvirt-daemon-system"
      - "libvirt-daemon-system"
      - "lintian"
      - "lsb-release"
      - "make"
      - "neofetch"
      - "net-tools"
      - "nmap"
      - "p7zip"
      - "parallel"
      - "postgresql-client"
      - "protobuf-compiler"
      - "python3-debian"
      - "ripgrep"
      - "rlwrap"
      - "rsync"
      - "shellcheck"
      - "socat"
      - "software-properties-common"
      - "tmux"
      - "tree"
      - "unrar"
      - "vagrant-libvirt"
      - "zsh"
    update_cache: true
    autoclean: true
    autoremove: true
    state: "present"

- name: "Add Debian repos"
  become: true
  loop: "{{ apt_repos }}"
  ansible.builtin.deb822_repository:
    name: "{{ item.name }}"
    types: "deb"
    uris: "{{ item.uri }}"
    suites: "{{ item.suite }}"
    components: "{{ item.component }}"
    signed_by: "{{ item.key_uri }}"
    architectures: ["amd64"]

- name: "Install packages from new repos"
  become: true
  loop: "{{ apt_repos }}"
  ansible.builtin.apt:
    pkg: "{{ item.packages }}"
    update_cache: true
    autoclean: true
    autoremove: true
    clean: true

################################################################################
# User setup
################################################################################
- name: "Add user"
  become: true
  ansible.builtin.user:
    name: "{{ user }}"
    group: "{{ user }}"
    groups:
      - docker
      - libvirt
      - sudo
    append: true
    create_home: true
    shell: "/usr/bin/zsh"
    state: "present"

- name: "Add user config for sudoers file"
  become: true
  ansible.builtin.copy:
    content: "{{ user }} ALL=(ALL) NOPASSWD:ALL"
    dest: "/etc/sudoers.d/{{ user }}"
    mode: "0600"

################################################################################
# Dotfiles/other config setup
################################################################################
- name: "Run dotfiles setup"
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command:
    cmd: "make -C ../../ dotfiles" # noqa: no-changed-when
