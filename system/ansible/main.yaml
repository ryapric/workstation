---
- name: "Initialization"
  hosts: "all,localhost"

  vars:
    user: "{{ lookup('ansible.builtin.env', 'USER', default = 'ryan') }}"
    homedir: "{{ lookup('ansible.builtin.env', 'HOME') }}"
    # Need a few Debian vars instead of using Facts, because we're running Debian Unstable and that
    # can't always be interpolated into repo sources
    debian_release_number: "13"
    debian_release_alias: "trixie"
    apt_repos:
      - name: "mise"
        uri: "https://mise.jdx.dev/deb"
        key_uri: "https://mise.jdx.dev/gpg-key.pub"
        suite: "stable"
        component: "main"
        packages:
          - "mise"
      - name: "docker"
        uri: "https://download.docker.com/linux/debian"
        key_uri: "https://download.docker.com/linux/debian/gpg"
        suite: "{{ debian_release_alias }}"
        component: "stable"
        packages:
          - "docker-ce"
          - "docker-ce-cli"
          - "containerd.io"
          - "docker-compose-plugin"
      # TODO: let mise handle the Vagrant install, once Vagrant is released as a Go binary in v3.0
      - name: "hashicorp"
        uri: "https://apt.releases.hashicorp.com"
        key_uri: "https://apt.releases.hashicorp.com/gpg"
        suite: "{{ debian_release_alias }}"
        component: "main"
        packages:
          - "vagrant"
          - "vagrant-libvirt"
    apt_repos_desktop:
      - name: vscode
        uri: "https://packages.microsoft.com/repos/code"
        key_uri: "https://packages.microsoft.com/keys/microsoft.asc"
        suite: "stable"
        component: "main"
        packages:
          - "code"

  tasks:
    - name: "Upgrade to Debian Sid/Unstable"
      ansible.builtin.include_tasks:
        file: "./tasks/debian-unstable.yaml"
        apply:
          tags: [debian-unstable]
      when: ansible_os_family == "Debian"
      tags: [debian-unstable]
    - name: "Run for core system"
      ansible.builtin.include_tasks:
        file: "./tasks/core.yaml"
        apply:
          tags: [core]
      when: ansible_os_family == "Debian"
      tags: [core]
    - name: "Run for desktop system"
      ansible.builtin.include_tasks:
        file: "./tasks/desktop.yaml"
        apply:
          tags: [desktop]
      when: ansible_os_family == "Debian"
      tags: [desktop]
    - name: "Run shell configuration"
      ansible.builtin.include_tasks:
        file: "./tasks/shell-extras.yaml"
        apply:
          tags: [shell-extras]
      tags: [shell-extras]
    # - name: "Run for home server"
    #   ansible.builtin.include_tasks:
    #     file: "./tasks/desktop.yaml"
    #     apply:
    #       tags: [home-server]
    #   when: ansible_os_family == "Debian"
    #   tags: [home-server]
